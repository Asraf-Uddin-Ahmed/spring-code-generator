package {0}.resources.entities;

import static org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo;
import static org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn;

import org.springframework.http.HttpMethod;

import {0}.controllers.{1}Controller;
import {0}.dtos.mapper.{1}Mapper;
import {0}.dtos.response.entities.{1}ResponseDto;
import {0}.entities.{1};
import {0}.resources.BaseResource;
import {0}.resources.ExtendedLink;

import lombok.Getter;

@Getter
public class {1}Resource extends BaseResource '{'

	private final {1}ResponseDto {2};

	public {1}Resource(final {1} {2}, final {1}Mapper {2}Mapper) '{'

		this.{2} = {2}Mapper.getResponseDto({2});
		final long id = {2}.getId();

		add(new ExtendedLink(linkTo(methodOn({1}Controller.class).getById(id)).withSelfRel())
				.withMethod(HttpMethod.GET));
		add(new ExtendedLink(linkTo(methodOn({1}Controller.class).update(id, null)).withSelfRel())
				.withMethod(HttpMethod.PUT));
        add(new ExtendedLink(linkTo(methodOn({1}Controller.class).delete(id)).withSelfRel())
				.withMethod(HttpMethod.DELETE));

		this.loadCommonLink();

	'}'

	public {1}Resource forDeletion() '{'
		super.removeLinks();
		this.loadCommonLink();
		return this;
	'}'

	private void loadCommonLink() '{'
		add(new ExtendedLink(linkTo(methodOn({1}Controller.class).create(null)).withRel("create"))
				.withMethod(HttpMethod.POST));
		add(new ExtendedLink(linkTo(methodOn({1}Controller.class).getRequests()).withRel("requests"))
				.withMethod(HttpMethod.GET));
		add(new ExtendedLink(linkTo({1}Controller.class).withRel("{3}"))
				.withMethod(HttpMethod.GET).withSearchableData());
	'}'
'}'